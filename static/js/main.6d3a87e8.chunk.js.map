{"version":3,"sources":["TimelineEvent.js","UtcTimelessDate.js","App.js","serviceWorker.js","index.js"],"names":["TimelineEvent","props","className","iconUrl","timelineEvent","action","state","id","date","url","body","content","iconHeight","iconWidth","title","prefix","link","text","suffix","subtitle","commits","tag","this","map","item","key","href","source","Date","toLocaleDateString","weekday","year","month","day","toLowerCase","toLocaleTimeString","timeStyle","timeZone","timeZoneName","icon","Image","src","style","width","height","fluid","roundedCircle","undefined","React","Component","UtcTimelessDate","days","getTime","setDate","getDate","setTime","UTC","getFullYear","getMonth","filterDateMin","Math","floor","filterDateMax","ceil","actionRegexes","name","pattern","RegExp","externalLinks","alt","timestampToDateString","timestamp","toISOString","split","App","onSliderChange","value","setState","filterDateStart","filterDateEnd","filters","$gte","$lt","displayEvents","onCheckboxChange","event","target","filterAction","bugzilla","checked","github","hg","$or","filter","regex","addDays","events","filterEventMax","git","bind","client","Stitch","initializeDefaultAppClient","mongodb","getServiceClient","RemoteMongoClient","factory","db","displayEventsOnLoad","collection","find","$and","limit","sort","asArray","then","auth","loginWithCredential","AnonymousCredential","catch","console","error","list","length","s","join","n","lastIndexOf","slice","replace","Container","Row","Col","backgroundColor","el","i","marginLeft","Form","Check","type","label","onChange","fontSize","min","max","allowCross","getFriendlyWordList","r","_id","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d3a87e8.chunk.js","sourcesContent":["import React from 'react';\nimport { VerticalTimelineElement }  from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport Image from 'react-bootstrap/Image'\nimport ReactMarkdown from 'react-markdown';\n\nclass TimelineEvent extends React.Component {\n  constructor(props) {\n    super(props);\n    let className;\n    let iconUrl;\n    switch (this.props.timelineEvent.action) {\n      case 'GitHub_PullRequestEvent':\n      case 'GitHub_PullRequestReviewCommentEvent':\n      case 'GitHub_ForkEvent':\n      case 'GitHub_IssueCommentEvent':\n        className = 'blue';\n        break;\n      case 'GitHub_PushEvent':\n        className = 'green';\n        break;\n      case 'GitHub_DeleteEvent':\n        className = 'red opaque';\n        break;\n      default:\n        className = 'gray';\n        break;\n    }\n    switch (this.props.timelineEvent.action) {\n      case 'GitHub_PullRequestEvent':\n        iconUrl = 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/icon-push-github.png';\n        break;\n      case 'GitHub_PullRequestReviewCommentEvent':\n        iconUrl = 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/icon-push-github.png';\n        break;\n      case 'GitHub_IssueCommentEvent':\n        iconUrl = 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/icon-push-github.png';\n        break;\n      case 'GitHub_PushEvent':\n        iconUrl = 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/icon-push-github.png';\n        break;\n      case 'GitHub_DeleteEvent':\n        iconUrl = 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/icon-push-github.png';\n        break;\n      case 'GitHub_ForkEvent':\n        iconUrl = 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/icon-push-github.png';\n        break;\n      case 'Bugzilla_BugChange':\n        iconUrl = 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/icon-bugzilla.png';\n        break;\n      case 'Bugzilla_BugComment':\n        iconUrl = 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/icon-bugzilla.png';\n        break;\n      default:\n        iconUrl = 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/icon-push-github.png';\n        break;\n    }\n    this.state = {\n      id: this.props.timelineEvent.id,\n      className: className,\n      date: this.props.timelineEvent.date,\n      url: (this.props.timelineEvent.body && this.props.timelineEvent.body.content.url)\n        ? this.props.timelineEvent.body.content.url\n        : null,\n      iconUrl: iconUrl,\n      iconHeight: '60px',\n      iconWidth: '60px',\n      title: {\n        prefix: this.props.timelineEvent.title.prefix,\n        link: {\n          text: this.props.timelineEvent.title.text,\n          url: this.props.timelineEvent.title.url\n        },\n        suffix: this.props.timelineEvent.title.suffix\n      },\n      subtitle: (this.props.timelineEvent.subtitle) ? {\n        prefix: this.props.timelineEvent.subtitle.prefix,\n        link: {\n          text: this.props.timelineEvent.subtitle.text,\n          url: this.props.timelineEvent.subtitle.url\n        },\n        suffix: this.props.timelineEvent.subtitle.suffix\n      } : {},\n      body: '',\n      commits: (this.props.timelineEvent.body && this.props.timelineEvent.body.tag === 'UnorderedList')\n        ? this.props.timelineEvent.body.content\n        : []\n    };\n  }\n\n  render() {\n    let body;\n    let tag = (this.props.timelineEvent.body)\n      ? this.props.timelineEvent.body.tag\n      : null;\n    switch (tag) {\n      case 'UnorderedList':\n        body = (\n          <ul>\n            {\n              this.props.timelineEvent.body.content.map((item, key) =>\n                <li key={key}>\n                  {item.prefix}\n                  <a href={item.url}>\n                    {item.text}\n                  </a>\n                  {item.suffix}\n                </li>\n              )\n            }\n          </ul>\n        );\n        break;\n      case 'Markdown':\n        body = (\n          this.props.timelineEvent.body.content.map((item, key) =>\n            <ReactMarkdown source={item.text} key={key} />\n          )\n        );\n        break;\n      default:\n        body = (this.props.timelineEvent.body)\n        ? (this.props.timelineEvent.body.content.map((item, key) =>\n            <p key={key}>{item.text}</p>\n          ))\n        : '';\n        break;\n    }\n    return (\n      <VerticalTimelineElement\n        className={this.state.className}\n        key={this.state.id}\n        date={\n          (new Date(this.state.date)).toLocaleDateString('en-GB', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }).toLowerCase() + ' - ' +\n          (new Date(this.state.date)).toLocaleTimeString('en-GB', { timeStyle: 'full', timeZone: 'UTC', timeZoneName: 'short' }).toLowerCase()\n        }\n        icon={<Image src={this.state.iconUrl} style={{width: this.state.iconWidth, height: this.state.iconHeight}} fluid roundedCircle />} >\n        <h4 className={'vertical-timeline-element-title ' + this.state.className}>\n          {\n            (this.state.title.link === null)\n              ? (this.state.title.prefix)\n              : (<span>{this.state.title.prefix} <a href={this.state.title.link.url}>{this.state.title.link.text}</a> {this.state.title.suffix}</span>)\n          }\n        </h4>\n        <h5 className={'vertical-timeline-element-subtitle ' + this.state.className}>\n          {\n            (this.state.subtitle.link === null || this.state.subtitle.link === undefined)\n              ? (this.state.subtitle.prefix)\n              : (<span>{this.state.subtitle.prefix} <a href={this.state.subtitle.link.url}>{this.state.subtitle.link.text}</a> {this.state.subtitle.suffix}</span>)\n          }\n        </h5>\n        <div>\n        {body}\n        </div>\n      </VerticalTimelineElement>\n    )\n  }\n}\n\nexport default TimelineEvent;","class UtcTimelessDate extends Date {  \n  addDays(days) {\n    let date = new Date (this.getTime());\n    date.setDate(date.getDate() + (days || 0));\n    this.setTime(date.getTime());\n    return this;\n  }\n  floor() {\n    let date = new Date (\n      Date.UTC (\n        this.getFullYear(),\n        this.getMonth(),\n        this.getDate()\n      )\n    );\n    this.setTime(date.getTime());\n    return this;\n  }\n  ceil() {\n    let date = new Date (\n      Date.UTC (\n        this.getFullYear(),\n        this.getMonth(),\n        this.getDate() + 1\n      )\n    );\n    this.setTime(date.getTime());\n    return this;\n  }\n}\n\nexport default UtcTimelessDate;\n//module.exports = UtcTimelessDate;","import React, { Component } from \"react\";\nimport {\n  Stitch,\n  AnonymousCredential,\n  RemoteMongoClient\n} from 'mongodb-stitch-browser-sdk';\nimport {\n  VerticalTimeline\n} from 'react-vertical-timeline-component';\nimport TimelineEvent from './TimelineEvent';\nimport UtcTimelessDate from './UtcTimelessDate';\nimport Slider, { Range } from 'rc-slider';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'rc-slider/assets/index.css';\nimport './App.css';\n\nconst filterDateMin = Math.floor((new UtcTimelessDate ('2013-04-07').floor().getTime()));\nconst filterDateMax = Math.floor((new UtcTimelessDate ().ceil()).getTime());\nconst actionRegexes = [\n  {\n    name: 'bugzilla',\n    pattern: new RegExp ('^bugzilla_', 'i')\n  },\n  {\n    name: 'git',\n    pattern: new RegExp ('^git_', 'i')\n  },\n  {\n    name: 'github',\n    pattern: new RegExp ('^github_', 'i')\n  },\n  {\n    name: 'hg',\n    pattern: new RegExp ('^hg_', 'i')\n  }\n];\n\nconst externalLinks = [\n  {\n    url: 'https://twitter.com/grenade',\n    icon: 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/twitter.png',\n    alt: 'random musings at twitter'\n  },\n  {\n    url: 'https',\n    icon: 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/facebook.png',\n    alt: 'social life and photos on facebook'\n  },\n  {\n    url: 'https',\n    icon: 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/in.png',\n    alt: 'career history and linkedin connections and profile'\n  },\n  {\n    url: 'https',\n    icon: 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/so.png',\n    alt: 'giving and receiving technical advice at stackoverflow'\n  },\n  {\n    url: 'https',\n    icon: 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/github.png',\n    alt: 'code contribution at github'\n  },\n  {\n    url: 'https://mozillians.org/en-US/u/grenade/',\n    icon: 'https://github.com/grenade/grenade-ng-root/raw/master/app/images/mozilla.png',\n    alt: 'working at mozilla'\n  },\n  {\n    url: 'https',\n    icon: 'https://raw.githubusercontent.com/steelhorseadventures/sha-ng/master/app/images/bike36.png',\n    alt: 'solo adventure biking in europe on a yamaha fzs 1000'\n  },\n  {\n    url: 'https',\n    icon: 'https://raw.githubusercontent.com/steelhorseadventures/sha-ng/master/app/images/sail36.png',\n    alt: 'sailing solo on a magnifik midget'\n  }\n];\n\nfunction timestampToDateString(timestamp) {\n  return new Date(timestamp).toISOString().split('.')[0] + 'Z';\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    let filterDateStart = Math.floor((new UtcTimelessDate ().floor().addDays(-30).getTime()));\n    let filterDateEnd =  Math.floor((new UtcTimelessDate ().ceil()).getTime());\n    this.state = {\n      events: [],\n      filterEventMax: 100,\n      filterDateStart: filterDateStart,\n      filterDateEnd: filterDateEnd,\n      filterAction: {\n        bugzilla: true,\n        git: true,\n        github: true,\n        hg: true\n      },\n      filters: [\n        { date: { $gte: timestampToDateString(filterDateStart) } },\n        { date: { $lt: timestampToDateString(filterDateEnd) } },\n        {\n          $or: actionRegexes.map(regex => ({ action: regex.pattern }))\n        }\n      ]\n    };\n    this.displayEvents = this.displayEvents.bind(this);\n  }\n  \n  componentDidMount() {\n    this.client = Stitch.initializeDefaultAppClient('grenade-tnats');\n    const mongodb = this.client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas-grenade-stitch');\n    this.db = mongodb.db('grenade');\n    this.displayEventsOnLoad();\n  }\n  \n  displayEvents() {\n    this.db\n      .collection('moment')\n      .find(\n        {\n          $and: this.state.filters\n        },\n        { limit: this.state.filterEventMax, sort: { date: -1 } })\n      .asArray()\n      .then(events => {\n        this.setState({events});\n      });\n  }\n\n  displayEventsOnLoad() {\n    this.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(this.displayEvents)\n      .catch(console.error);\n  }\n\n  getFriendlyWordList(list) {\n    if (!list || list.length === 0) {\n      return '';\n    }\n    let s = list.join(', ');\n    let n = s.lastIndexOf(', ');\n    return s.slice(0, n) + s.slice(n).replace(', ', ' and ');\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"white-text\">\n          <Col>\n            <h1>\n              hi, i'm rob\n            </h1>\n          </Col>\n          <Col>\n            <div className=\"rounded\" style={{ backgroundColor: 'white', width: '100%' }}>\n              {externalLinks.map((el, i) => (\n                <a href={el.link} title={el.alt} key={i}>\n                  <img src={el.icon} alt={el.alt} className=\"float-right\" style={{marginLeft: '10px'}} />\n                </a>              \n              ))}\n            </div>\n          </Col>\n        </Row>\n        <Row className=\"white-text\">\n          <p>\n            i rarely say anything that warrants capital letters. if you're here to see my resume, please go to: <a className=\"hot-pink-text\" href=\"https://grenade.github.io/cv/\">https://grenade.github.io/cv</a>.\n            &nbsp;much of what you never wanted to know about me, can be found by following the icon links above.\n            &nbsp;a peek into the projects i'm working on, is below.\n          </p>\n        </Row>\n        <Row className=\"white-text\">\n          <Col>\n            {\n              actionRegexes.map(regex => regex.name).map(source => (\n                <Form.Check\n                  type=\"switch\"\n                  id={source}\n                  label={source}\n                  checked={this.state.filterAction[source]}\n                  onChange={this.onCheckboxChange} />\n              ))\n            }\n          </Col>\n          <Col>\n          </Col>\n          <Col>\n          </Col>\n          <Col>\n            <label style={{fontSize: '70%'}}>number of activities to display: {this.state.filterEventMax}</label>\n            <Slider\n              value={this.state.filterEventMax}\n              min={10}\n              max={1000}\n              onChange={(filterEventMax) => this.setState({filterEventMax}, () => { this.displayEvents(); })} />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Range\n              allowCross={false}\n              value={[this.state.filterDateStart, this.state.filterDateEnd]}\n              min={filterDateMin}\n              max={filterDateMax}\n              onChange={this.onSliderChange} />\n            <p className=\"white-text text-center\">\n              showing <em>{(this.state.filterEventMax === this.state.events.length) ? 'latest ' + this.state.filterEventMax : 'all ' + this.state.events.length}</em> activities from <em>{this.getFriendlyWordList(actionRegexes.filter(r => this.state.filterAction[r.name]).map(r => r.name))}</em> that took place between\n              &nbsp;<em>{(new Date(this.state.filterDateStart)).toLocaleDateString('en-GB', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }).toLowerCase()}</em>\n              &nbsp;and <em>{(new Date(this.state.filterDateEnd)).toLocaleDateString('en-GB', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }).toLowerCase()}</em>.\n            </p>\n            <VerticalTimeline>\n              {this.state.events.map((event) => (\n                <TimelineEvent timelineEvent={event} key={event._id} />\n              ))}\n            </VerticalTimeline>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  onSliderChange = (value) => {\n    this.setState(\n      (state, props) => ({\n        filterDateStart: (new UtcTimelessDate(value[0]).floor().getTime()),\n        filterDateEnd: (new UtcTimelessDate(value[1]).ceil().getTime()),\n        filters: [\n          { date: { $gte: timestampToDateString(value[0]) } },\n          { date: { $lt: timestampToDateString(value[1]) } },\n          state.filters[2]\n        ]\n      }),\n      () => { this.displayEvents(); }\n    );\n  }\n\n  onCheckboxChange = (event) => {\n    const target = event.target;\n    this.setState(\n      (state, props) => ({\n        filterAction: {\n          bugzilla: (target.id === 'bugzilla') ? target.checked : state.filterAction.bugzilla,\n          github: (target.id === 'github') ? target.checked : state.filterAction.github,\n          hg: (target.id === 'hg') ? target.checked : state.filterAction.hg\n        },\n        filters: [\n          state.filters[0],\n          state.filters[1],\n          {\n            $or: actionRegexes\n              .filter(regex => ((regex.name === target.id) && target.checked) || ((regex.name !== target.id) && state.filterAction[regex.name]))\n              .map(regex => ({ action: regex.pattern }))\n          }\n        ]\n      }),\n      () => { this.displayEvents(); }\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}